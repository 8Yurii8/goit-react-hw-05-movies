{"version":3,"file":"static/js/221.f1e92963.chunk.js","mappings":"oOACMA,EAAW,gCACXC,EAAM,4CAGCC,EAAc,SAACC,EAAQC,GAClC,OAAOC,EAAAA,EAAAA,IAAA,UAAaL,GAAb,OAHS,uBAGT,OAAoCG,GAApC,OAA6CC,EAA7C,YAA2DH,GACnE,EAEYK,EAAiB,SAAAF,GAC5B,OAAOC,EAAAA,EAAAA,IAAA,UAAaL,GAAb,OAAwBI,EAAxB,YAAsCH,GAC9C,EAEYM,EAAU,SAAAH,GACrB,OAAOC,EAAAA,EAAAA,IAAA,UAAaL,GAAb,OAAwBI,EAAxB,YAAsCH,GAC9C,C,8ECkCD,UA7Ce,WACb,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAuBA,OACE,0BACE,4BACE,kBAAMC,SApBS,SAAAC,GACnBA,EAAMC,iBACgB,KAAlBX,EAAOY,UAGXb,EAAAA,EAAAA,IAAYC,EAVK,uCAWda,MAAK,SAAAC,GACJ,IAAMC,EAAOD,EAASC,KACtBP,EAAUO,EAAKC,QAChB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdV,EAAU,GACX,IACHF,EAAU,IACX,EAKK,WACE,mBAAQc,KAAK,SAAb,qBACA,kBACEA,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOxB,EACPyB,SAhCiB,SAAAf,GACzBJ,EAAUI,EAAMgB,cAAcF,MAAMG,cACrC,QAiCK,SAAC,IAAD,CAAYpB,OAAQA,QAI3B,C,kDClBD,IAzBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACpB,OACE,+BACE,wBACGA,EAAOqB,KAAI,SAAAC,GAAK,OACfA,EAAMC,OACJ,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAA3B,SAAkCH,EAAMC,SADjCD,EAAMG,IAGb,IALW,OAUxB,C","sources":["components/Api.jsx","components/Movies.jsx","components/MoviesList.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '&api_key=a12547abec0d5f114d2002493fcf19d3';\nconst pageQuery = 'search/movie?query=';\n\nexport const fetchImages = (search, pageParams) => {\n  return axios.get(`${BASE_URL}${pageQuery}${search}${pageParams}&${KEY}`);\n};\n\nexport const fetchTopMovies = pageParams => {\n  return axios.get(`${BASE_URL}${pageParams}&${KEY}`);\n};\n\nexport const fetchId = pageParams => {\n  return axios.get(`${BASE_URL}${pageParams}&${KEY}`);\n};\n","import React, { useState } from 'react';\nimport { fetchImages } from './Api.jsx';\nimport MoviesList from './MoviesList';\n\nconst Movies = () => {\n  const [search, setSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const pageParams = '&include_adult=false&language=en-US';\n  const handleSearchChange = event => {\n    setSearch(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (search.trim() === '') {\n      return;\n    }\n    fetchImages(search, pageParams)\n      .then(response => {\n        const data = response.data;\n        setMovies(data.results);\n      })\n      .catch(error => {\n        console.error(error);\n        setMovies([]);\n      });\n    setSearch('');\n  };\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <button type=\"submit\">Search</button>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={search}\n            onChange={handleSearchChange}\n          />\n        </form>\n        <MoviesList movies={movies} />\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(movie =>\n          movie.title ? (\n            <li key={movie.id}>\n              <Link to={`/Movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ) : null\n        )}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesList;\n"],"names":["BASE_URL","KEY","fetchImages","search","pageParams","axios","fetchTopMovies","fetchId","useState","setSearch","movies","setMovies","onSubmit","event","preventDefault","trim","then","response","data","results","catch","error","console","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","map","movie","title","to","id"],"sourceRoot":""}