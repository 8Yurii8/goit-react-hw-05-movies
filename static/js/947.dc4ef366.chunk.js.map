{"version":3,"file":"static/js/947.dc4ef366.chunk.js","mappings":"sIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,C,gHCkCA,EA3Ca,WACX,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eDMuBC,ECNvB,GDMuBA,ECNvB,UAAG,gHAESC,EAAAA,EAAAA,IAAeR,GAFxB,OAERS,EAFQ,OAGRC,EAAOD,EAASC,KACtBN,EAAQM,EAAKP,MAJC,gDAMdQ,QAAQf,MAAR,MACAQ,EAAQ,IAPM,wDDOb,WACL,IAAIQ,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIjB,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMoB,EAAGS,MAAMJ,EAAME,GAEzB,SAASxB,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAO0B,GACd/B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS0B,EACnE,CAEA3B,OAAM4B,EACR,GACF,GCvBiB,qDAWfZ,GACD,GAAE,CAACN,KAGF,wBACGG,GACCA,EAAKgB,KAAI,SAAAC,GAAM,OACb,2BACE,gBACEC,IAAG,0CAAqCD,EAAOE,cAC/CC,MAAO,QACPC,IAAKJ,EAAOK,QAEd,4BACE,uBAAIL,EAAOK,QACX,uBAAIL,EAAOM,iBARNN,EAAOO,GADH,KAetB,C,oKCzCKC,EAAW,gCACXC,EAAM,4CAECC,EAAc,SAAAC,GACzB,OAAOC,EAAAA,EAAAA,IAAA,UACFJ,EADE,8BAC4BG,EAD5B,gDAC0EF,GAElF,EAEYI,EAAiB,WAC5B,OAAOD,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,0CAAuDC,GAC/D,EAEYK,EAAU,SAAAlC,GACrB,OAAOgC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8B5B,EAA9B,2BAAwD6B,GAChE,EAEYrB,EAAiB,SAAAR,GAC5B,OAAOgC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8B5B,EAA9B,mCAAgE6B,GACxE,EAEYM,EAAiB,SAAAnC,GAC5B,OAAOgC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8B5B,EAA9B,mCAAgE6B,GACxE,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/Cast.jsx","services/Api.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useEffect, useState } from 'react';\nimport { fetchId小redits } from '../services/Api';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await fetchId小redits(movieId);\n        const data = response.data;\n        setCast(data.cast);\n      } catch (error) {\n        console.error(error);\n        setCast([]);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast &&\n        cast.map(person => (\n          <li key={person.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${person.profile_path}`}\n              width={'100px'}\n              alt={person.name}\n            />\n            <div>\n              <p>{person.name}</p>\n              <p>{person.character}</p>\n            </div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '&api_key=a12547abec0d5f114d2002493fcf19d3';\n\nexport const fetchMovies = search => {\n  return axios.get(\n    `${BASE_URL}search/movie?query=${search}&include_adult=false&language=en-US&&${KEY}`\n  );\n};\n\nexport const fetchTopMovies = () => {\n  return axios.get(`${BASE_URL}trending/all/day?language=en-US${KEY}`);\n};\n\nexport const fetchId = movieId => {\n  return axios.get(`${BASE_URL}movie/${movieId}?language=en-US&${KEY}`);\n};\n\nexport const fetchId小redits = movieId => {\n  return axios.get(`${BASE_URL}movie/${movieId}/credits?language=en-US&${KEY}`);\n};\n\nexport const fetchIdReviews = movieId => {\n  return axios.get(`${BASE_URL}movie/${movieId}/reviews?language=en-US&${KEY}`);\n};\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","fn","fetchId小redits","response","data","console","self","this","args","arguments","apply","err","undefined","map","person","src","profile_path","width","alt","name","character","id","BASE_URL","KEY","fetchMovies","search","axios","fetchTopMovies","fetchId","fetchIdReviews"],"sourceRoot":""}