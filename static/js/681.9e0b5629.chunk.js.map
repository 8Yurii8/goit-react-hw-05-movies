{"version":3,"file":"static/js/681.9e0b5629.chunk.js","mappings":"oOACMA,EAAW,gCACXC,EAAM,4CAGCC,EAAc,SAACC,EAAQC,GAClC,OAAOC,EAAAA,EAAAA,IAAA,UAAaL,GAAb,OAHS,uBAGT,OAAoCG,GAApC,OAA6CC,EAA7C,YAA2DH,GACnE,EAEYK,EAAiB,SAAAF,GAC5B,OAAOC,EAAAA,EAAAA,IAAA,UAAaL,GAAb,OAAwBI,EAAxB,YAAsCH,GAC9C,EAEYM,EAAU,SAAAH,GACrB,OAAOC,EAAAA,EAAAA,IAAA,UAAaL,GAAb,OAAwBI,EAAxB,YAAsCH,GAC9C,C,8EC4BD,UAvCgB,WACd,IAAMO,GAASC,EAAAA,EAAAA,MACf,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,YACa,WACnB,IAAMT,EAAU,gBAAYI,EAAOM,QAAnB,4BAChBP,EAAAA,EAAAA,IAAQH,GACLW,MAAK,SAAAC,GACJ,IAAMC,EAAOD,EAASC,KACtBL,EAAWK,EAAKC,QACjB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdR,EAAW,GACZ,GACJ,CAEDU,EACD,GAAE,CAACd,EAAOM,WAGT,wBACGH,EAAQY,KAAI,SAAAC,GAAM,OACjB,yBACE,4BACE,uBAAIA,EAAOC,eAAeC,YAC1B,uBAAIF,EAAOG,cAHNH,EAAOI,GADC,KAUxB,C","sources":["components/Api.jsx","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '&api_key=a12547abec0d5f114d2002493fcf19d3';\nconst pageQuery = 'search/movie?query=';\n\nexport const fetchImages = (search, pageParams) => {\n  return axios.get(`${BASE_URL}${pageQuery}${search}${pageParams}&${KEY}`);\n};\n\nexport const fetchTopMovies = pageParams => {\n  return axios.get(`${BASE_URL}${pageParams}&${KEY}`);\n};\n\nexport const fetchId = pageParams => {\n  return axios.get(`${BASE_URL}${pageParams}&${KEY}`);\n};\n","import React, { useEffect, useState } from 'react';\nimport { fetchId } from './Api';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nconst Reviews = () => {\n  const params = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = () => {\n      const pageParams = `movie/${params.movieId}/reviews?language=en-US`;\n      fetchId(pageParams)\n        .then(response => {\n          const data = response.data;\n          setReviews(data.results);\n        })\n        .catch(error => {\n          console.error(error);\n          setReviews([]);\n        });\n    };\n\n    fetchReviews();\n  }, [params.movieId]);\n\n  return (\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <div>\n            <p>{review.author_details.username}</p>\n            <p>{review.content}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nReviews.propTypes = {\n  moviesId: PropTypes.number,\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","KEY","fetchImages","search","pageParams","axios","fetchTopMovies","fetchId","params","useParams","useState","reviews","setReviews","useEffect","movieId","then","response","data","results","catch","error","console","fetchReviews","map","review","author_details","username","content","id"],"sourceRoot":""}