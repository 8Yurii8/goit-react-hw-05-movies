{"version":3,"file":"static/js/221.fbf51280.chunk.js","mappings":"sMAwDA,UAnDe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACHF,IACLG,EAAAA,EAAAA,IAAYH,GACTI,MAAK,SAAAC,GACJ,IAAMC,EAAOD,EAASC,KACtBV,EAAUU,EAAKC,QAChB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdb,EAAU,GACX,GACJ,GAAE,CAACI,IAeJ,OACE,4BACE,kBAAMW,SAXW,SAAAC,GACnBA,EAAMC,iBACgB,KAAlBpB,EAAOqB,SAGXf,EAAgB,CAAEC,MAAOP,IACzBC,EAAU,IACX,EAIG,WACE,mBAAQqB,KAAK,SAAb,qBACA,kBACEA,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAO1B,EACP2B,SAvBmB,SAAAR,GACzBlB,EAAUkB,EAAMS,cAAcF,MAAMG,cACrC,QAwBG,SAAC,IAAD,CAAY3B,OAAQA,MAGzB,C,2DCtBD,IA5BmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACd4B,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,wBACG7B,EAAO8B,KAAI,SAAAC,GAAK,OACfA,EAAMC,OACJ,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACGG,EAAMC,SAFFD,EAAMG,IAKb,IAPW,OAYxB,C,oKCpBKG,EAAW,gCACXC,EAAM,4CAEC9B,EAAc,SAAAV,GACzB,OAAOyC,EAAAA,EAAAA,IAAA,UACFF,EADE,8BAC4BvC,EAD5B,gDAC0EwC,GAElF,EAEYE,EAAiB,WAC5B,OAAOD,EAAAA,EAAAA,IAAA,UAAaF,EAAb,0CAAuDC,GAC/D,EAEYG,EAAU,SAAAC,GACrB,OAAOH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BK,EAA9B,2BAAwDJ,GAChE,EAEYK,EAAiB,SAAAD,GAC5B,OAAOH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BK,EAA9B,mCAAgEJ,GACxE,EAEYM,EAAiB,SAAAF,GAC5B,OAAOH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BK,EAA9B,mCAAgEJ,GACxE,C","sources":["components/Movies.jsx","components/MoviesList.jsx","services/Api.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchMovies } from '../services/Api';\nimport MoviesList from './MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [search, setSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    fetchMovies(query)\n      .then(response => {\n        const data = response.data;\n        setMovies(data.results);\n      })\n      .catch(error => {\n        console.error(error);\n        setMovies([]);\n      });\n  }, [query]);\n\n  const handleSearchChange = event => {\n    setSearch(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (search.trim() === '') {\n      return;\n    }\n    setSearchParams({ query: search });\n    setSearch('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">Search</button>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={search}\n          onChange={handleSearchChange}\n        />\n      </form>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(movie =>\n          movie.title ? (\n            <li key={movie.id}>\n              <Link to={`/Movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ) : null\n        )}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '&api_key=a12547abec0d5f114d2002493fcf19d3';\n\nexport const fetchMovies = search => {\n  return axios.get(\n    `${BASE_URL}search/movie?query=${search}&include_adult=false&language=en-US&&${KEY}`\n  );\n};\n\nexport const fetchTopMovies = () => {\n  return axios.get(`${BASE_URL}trending/all/day?language=en-US${KEY}`);\n};\n\nexport const fetchId = movieId => {\n  return axios.get(`${BASE_URL}movie/${movieId}?language=en-US&${KEY}`);\n};\n\nexport const fetchIdСredits = movieId => {\n  return axios.get(`${BASE_URL}movie/${movieId}/credits?language=en-US&${KEY}`);\n};\n\nexport const fetchIdReviews = movieId => {\n  return axios.get(`${BASE_URL}movie/${movieId}/reviews?language=en-US&${KEY}`);\n};\n"],"names":["useState","search","setSearch","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovies","then","response","data","results","catch","error","console","onSubmit","event","preventDefault","trim","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","location","useLocation","map","movie","title","to","id","state","from","BASE_URL","KEY","axios","fetchTopMovies","fetchId","movieId","fetchIdСredits","fetchIdReviews"],"sourceRoot":""}